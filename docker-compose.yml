version: '3.8'

services:
  web:
    build: .
    restart: always
    command: gunicorn budget_app.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/app/
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    env_file:
      - ./.env
    environment:
      - CONTAINER_ROLE=web
      - PERFORM_MIGRATIONS=1
    depends_on:
      - db
      - redis
    networks:
      - budget-network

  db:
    image: postgres:13.0-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    networks:
      - budget-network

  nginx:
    build: ./nginx
    restart: always
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - 80:80
    depends_on:
      - web
    networks:
      - budget-network

  redis:
    image: redis:alpine
    restart: always
    networks:
      - budget-network

  celery:
    build: .
    restart: always
    command: celery -A budget_app worker -l info
    volumes:
      - .:/app/
    env_file:
      - ./.env
    environment:
      - CONTAINER_ROLE=celery
      - PERFORM_MIGRATIONS=0
    depends_on:
      - web
      - redis
      - db
    networks:
      - budget-network

  celery-beat:
    build: .
    restart: always
    command: celery -A budget_app beat -l info
    volumes:
      - .:/app/
    env_file:
      - ./.env
    environment:
      - CONTAINER_ROLE=celery-beat
      - PERFORM_MIGRATIONS=0
    depends_on:
      - web
      - redis
      - db
    networks:
      - budget-network

  # Упрощенный сервис тестирования
  api-tests:
    build: .
    command: python manage.py test api.tests
    volumes:
      - .:/app/
    env_file:
      - ./.env
    depends_on:
      - web
      - db
    networks:
      - budget-network

networks:
  budget-network:

volumes:
  postgres_data:
  static_volume:
  media_volume: